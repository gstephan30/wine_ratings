wine_rating_words <- wine_ratings %>%
mutate(wine_id = row_number()) %>%
unnest_tokens(word, description) %>%
anti_join(stop_words, by = "word") %>%
filter(!word %in% c("wine", "drink"),
str_detect(word, "[a-z]"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dpi = 96)
my_theme <- theme(strip.background = element_rect(fill = "#152238"),
strip.text = element_text(colour = 'white', face = "bold"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
# Chunk 2
library(tidyverse)
library(broom)
library(tidytext)
theme_set(theme_light())
wine_ratings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-28/winemag-data-130k-v2.csv") %>%
select(-X1) %>%
extract(title, "year", "(20\\d\\d)", convert = TRUE, remove = FALSE) %>%
mutate(year = ifelse(year < 1900, NA, year)) %>%
filter(!is.na(price))
# Chunk 3
var_interest <- wine_ratings %>%
select(country, designation, region_1, taster_name, variety) %>%
pivot_longer(
cols = everything(),
names_to = "key",
values_to = "category"
) %>%
group_by(key) %>%
mutate(category = fct_lump(category, 10)) %>%
ungroup() %>%
count(key, category, sort = TRUE)
var_interest %>%
filter(!is.na(category)) %>%
mutate(key = str_to_title(key),
key = str_replace_all(key, "_", " ")) %>%
ggplot(aes(n, reorder_within(category, n, key), fill = key)) +
geom_col() +
facet_wrap(~key, scales = "free", ncol = 2) +
scale_y_reordered() +
theme(legend.position = "none") +
my_theme +
labs(title = "Wine Ratings",
subtitle = "Most used categories per variable",
x = "",
y = "") +
ggsci::scale_fill_lancet()
wine_ratings %>%
select(year, points, price) %>%
pivot_longer(
cols = everything(),
names_to = "key",
values_to = "values"
) %>%
mutate(values = ifelse(key == "price", log(values), values),
key = ifelse(key == "price", "log(price)", key)) %>%
ggplot(aes(values)) +
geom_histogram() +
facet_wrap(~key, scales = "free", ncol = 1) +
my_theme +
labs(title = "Wine Ratings",
subtitle = "Most used values per variable",
x = "",
y = "")
# Chunk 4
lm(points ~ log2(price), wine_ratings) %>%
tidy(conf.int = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(estimate, term, xmin = conf.low, xmax = conf.high)) +
geom_point() +
geom_errorbarh(height = 0.2) +
labs(title = "When price doubles, rating points go up by 2")
# Chunk 5
model <- wine_ratings %>%
replace_na(list(taster_name = "Missing", country = "Missing")) %>%
mutate(country = fct_relevel(fct_lump(country, 7), "US"),
taster_name = fct_relevel(fct_lump(taster_name, 6), "Missing")) %>%
lm(points ~ log2(price) + country + year + taster_name, data = .)
model %>%
tidy(conf.int = TRUE) %>%
filter(term != "(Intercept)") %>%
mutate(term = str_replace(term, "country", "Origin Country: "),
term = str_replace(term, "taster_name", "Taster: ")) %>%
separate(term, c("key", "value"), remove = FALSE) %>%
ggplot(aes(estimate, fct_reorder(term, estimate), xmin = conf.low, xmax = conf.high, color = key)) +
geom_point() +
geom_errorbarh() +
geom_vline(xintercept = 0, linetype = "dashed") +
ggsci::scale_color_lancet() +
theme(legend.position = "none") +
labs(title = "Factors influencing high ratings",
x = "Estimate",
y = "")
wine_rating_words <- wine_ratings %>%
mutate(wine_id = row_number()) %>%
unnest_tokens(word, description) %>%
anti_join(stop_words, by = "word") %>%
filter(!word %in% c("wine", "drink"),
str_detect(word, "[a-z]"))
wine_rating_words
wine_rating_words %>%
count(word, sort = TRUE)
wine_rating_words %>%
count(country, word, sort = TRUE) %>%
```
wine_rating_words %>%
count(country, word, sort = TRUE) %>%
```
wine_rating_words %>%
count(country, word, sort = TRUE)
wine_rating_words %>% distinct(country)
